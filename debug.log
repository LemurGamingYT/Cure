11:24:13 [INFO] main.py (line 11) - Running Cure compiler
System = Windows
Architecture = 64bit
Platform = Windows-11-10.0.26100-SP0
Processor = Intel64 Family 6 Model 142 Stepping 12, GenuineIntel
Machine = AMD64

11:24:13 [DEBUG] __init__.py (line 101) - CLI Action = test
11:24:13 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:13 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:13 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:13 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:13 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:13 [INFO] ir.py (line 599) - Defining class string
11:24:13 [INFO] ir.py (line 606) - Generics = {}
11:24:13 [DEBUG] ir.py (line 562) - Adding class member length
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:13 [DEBUG] ir.py (line 562) - Adding class member set
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:13 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:13 [INFO] ir.py (line 606) - Generics = {}
11:24:13 [DEBUG] ir.py (line 562) - Adding class member new
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:13 [DEBUG] ir.py (line 562) - Adding class member str
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:13 [DEBUG] ir.py (line 562) - Adding class member add
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:13 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:13 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:13 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:13 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:13 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:13 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:13 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:13 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:13 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:13 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:13 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:13 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:13 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:13 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:13 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:13 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:13 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = string
Left C++ Type = string
11:24:13 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:13 [DEBUG] ir.py (line 911) - Callee = string_add_int
Callee Symbol = None
11:24:13 [ERROR] ir.py (line 46) - cannot perform operation '+' on type 'string' and 'int'
11:24:13 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:13 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:13 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:13 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:13 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:13 [INFO] ir.py (line 599) - Defining class string
11:24:13 [INFO] ir.py (line 606) - Generics = {}
11:24:13 [DEBUG] ir.py (line 562) - Adding class member length
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:13 [DEBUG] ir.py (line 562) - Adding class member set
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:13 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:13 [INFO] ir.py (line 606) - Generics = {}
11:24:13 [DEBUG] ir.py (line 562) - Adding class member new
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:13 [DEBUG] ir.py (line 562) - Adding class member str
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:13 [DEBUG] ir.py (line 562) - Adding class member add
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:13 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:13 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:13 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:13 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:13 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:13 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:13 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:13 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:13 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:13 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:13 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:13 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:13 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:13 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:13 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:13 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:13 [ERROR] ir.py (line 46) - undefined name 'i'
11:24:13 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:13 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:13 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:13 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:13 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:13 [INFO] ir.py (line 599) - Defining class string
11:24:13 [INFO] ir.py (line 606) - Generics = {}
11:24:13 [DEBUG] ir.py (line 562) - Adding class member length
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:13 [DEBUG] ir.py (line 562) - Adding class member set
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:13 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:13 [INFO] ir.py (line 606) - Generics = {}
11:24:13 [DEBUG] ir.py (line 562) - Adding class member new
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:13 [DEBUG] ir.py (line 562) - Adding class member str
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:13 [DEBUG] ir.py (line 562) - Adding class member add
11:24:13 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:13 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:13 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:13 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:13 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:13 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:13 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:13 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:13 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:13 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:13 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:13 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:13 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:13 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:13 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:13 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:13 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:13 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:13 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:13 [ERROR] ir.py (line 46) - invalid start type for range loop 'string'
11:24:13 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:13 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:13 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:13 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:13 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [ERROR] ir.py (line 46) - invalid syntax 'return'
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:14 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:14 [DEBUG] ir.py (line 911) - Callee = int_mul_int
Callee Symbol = Symbol(name='int_mul_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_mul_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function int_mul_int with 2 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [int_mul_int]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function int_mul_int
11:24:14 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = float
Left C++ Type = float
11:24:14 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:14 [DEBUG] ir.py (line 911) - Callee = float_mul_int
Callee Symbol = None
11:24:14 [ERROR] ir.py (line 46) - cannot perform operation '*' on type 'float' and 'int'
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [ERROR] ir.py (line 46) - invalid syntax ')'
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = sqrt
Callee = Math_sqrt
Symbol = Symbol(name='Math_sqrt', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_sqrt', ret_type=PrimitiveType(type='float'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[Function(type=PrimitiveType(type='function'), name='Math_sqrt', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math'))], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_sqrt with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_sqrt, Math_sqrt]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type string
11:24:14 [DEBUG] ir.py (line 451) - Type mismatch with Param Type float and Arg Type string
Param Type Display = float
Param C++ Type = float
Param Type = PrimitiveType(type='float')
Arg Type Display = string
Arg C++ Type = string
Arg Type = ClassType(type='string', generic_types=[])
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type string
11:24:14 [DEBUG] ir.py (line 451) - Type mismatch with Param Type int and Arg Type string
Param Type Display = int
Param C++ Type = int
Param Type = PrimitiveType(type='int')
Arg Type Display = string
Arg C++ Type = string
Arg Type = ClassType(type='string', generic_types=[])
11:24:14 [ERROR] ir.py (line 475) - no matching overloads with types [string]
Self Param Type Display = float
Self Param C++ Type = float
Arg Type Display = string
Arg C++ Type = string
11:24:14 [ERROR] ir.py (line 46) - no matching overload with types [string]
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [ERROR] ir.py (line 46) - undefined name 'a'
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [ERROR] ir.py (line 46) - 'x' is immutable
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [ERROR] ir.py (line 46) - cannot initialize empty array
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = string
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': ClassType(type='string', generic_types=[])}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type string[] (Type = array<string>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type string
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type string
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type string
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string[]_set
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = string[]
Object C++ Type = array<string>
Attr = add
Callee = string[]_add
Symbol = Symbol(name='string[]_add', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='string[]_add', ret_type=PrimitiveType(type='nil'), params=[Param(type=ClassType(type='string', generic_types=[]), name='item', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function string[]_add with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [string[]_add]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type string and Arg Type int
11:24:14 [DEBUG] ir.py (line 451) - Type mismatch with Param Type string and Arg Type int
Param Type Display = string
Param C++ Type = string
Param Type = ClassType(type='string', generic_types=[])
Arg Type Display = int
Arg C++ Type = int
Arg Type = PrimitiveType(type='int')
11:24:14 [ERROR] ir.py (line 475) - no matching overloads with types [int]
Self Param Type Display = string
Self Param C++ Type = string
Arg Type Display = int
Arg C++ Type = int
11:24:14 [ERROR] ir.py (line 46) - no matching overload with types [int]
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int[]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = float
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='float')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type float[] (Type = array<float>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name float[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name float[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name float[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type float
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name float[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type float
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name float[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type float
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name float[]_set
11:24:14 [INFO] ir.py (line 433) - Calling function print_arr with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print_arr]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type float[]
11:24:14 [DEBUG] ir.py (line 451) - Type mismatch with Param Type int[] and Arg Type float[]
Param Type Display = int[]
Param C++ Type = array<int>
Param Type = ArrayType(type='int[]', element_type=PrimitiveType(type='int'))
Arg Type Display = float[]
Arg C++ Type = array<float>
Arg Type = ArrayType(type='float[]', element_type=PrimitiveType(type='float'))
11:24:14 [ERROR] ir.py (line 475) - no matching overloads with types [float[]]
Self Param Type Display = int[]
Self Param C++ Type = array<int>
Arg Type Display = float[]
Arg C++ Type = array<float>
11:24:14 [ERROR] ir.py (line 46) - no matching overload with types [float[]]
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 433) - Calling function print with 0 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [ERROR] ir.py (line 475) - no matching overloads with types []
Self Param Type Display = T
Self Param C++ Type = T
Arg Type Display = 
Arg C++ Type = 
11:24:14 [ERROR] ir.py (line 46) - no matching overload with types []
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = int
Object C++ Type = int
Attr = length
Callee = int_length
Symbol = None
11:24:14 [ERROR] ir.py (line 46) - unknown attribute 'length' on type 'int'
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 433) - Calling function input with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [input, input]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type string and Arg Type int
11:24:14 [DEBUG] ir.py (line 451) - Type mismatch with Param Type string and Arg Type int
Param Type Display = string
Param C++ Type = string
Param Type = ClassType(type='string', generic_types=[])
Arg Type Display = int
Arg C++ Type = int
Arg Type = PrimitiveType(type='int')
11:24:14 [ERROR] ir.py (line 475) - no matching overloads with types [int]
Self Param Type Display = 
Self Param C++ Type = 
Arg Type Display = int
Arg C++ Type = int
11:24:14 [ERROR] ir.py (line 46) - no matching overload with types [int]
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = string
Left C++ Type = string
11:24:14 [DEBUG] ir.py (line 901) - Right Type Display = string
Right Object Type = string

11:24:14 [DEBUG] ir.py (line 911) - Callee = string_add_string
Callee Symbol = Symbol(name='string_add_string', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='string_add_string', ret_type=ClassType(type='string', generic_types=[]), params=[Param(type=ClassType(type='string', generic_types=[]), name='a', is_mutable=False, default=None), Param(type=ClassType(type='string', generic_types=[]), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function string_add_string with 2 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [string_add_string]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type string and Arg Type string
11:24:14 [INFO] ir.py (line 446) - Checking Param Type string and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function string_add_string
11:24:14 [INFO] ir.py (line 433) - Calling function test with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [test]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type string and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function test
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = int[]
Object C++ Type = array<int>
Attr = add
Callee = int[]_add
Symbol = Symbol(name='int[]_add', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int[]_add', ret_type=PrimitiveType(type='nil'), params=[Param(type=PrimitiveType(type='int'), name='item', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function int[]_add with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [int[]_add]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function int[]_add
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int[]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 152) - Using fstream at Path C:\Programming\Python\Cure\fstream
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\fstream doesn't exist, checking if fstream is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\fstream
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\fstream\fstream.hpp, relative path = fstream\fstream.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\fstream\fstream_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\fstream\fstream_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class File
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name File_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member contents
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name File_contents
11:24:14 [DEBUG] ir.py (line 562) - Adding class member exists
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name File_exists
11:24:14 [DEBUG] ir.py (line 562) - Adding class member write
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name File_write
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\fstream\fstream_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\fstream\fstream_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = File
Object C++ Type = File
Attr = new
Callee = File_new
Symbol = Symbol(name='File_new', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='File_new', ret_type=ClassType(type='File', generic_types=[]), params=[Param(type=ClassType(type='string', generic_types=[]), name='filename', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function File_new with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [File_new]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type string and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function File_new
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = File
Object C++ Type = File
Attr = write
Callee = File_write
Symbol = Symbol(name='File_write', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='File_write', ret_type=PrimitiveType(type='nil'), params=[Param(type=ClassType(type='string', generic_types=[]), name='content', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function File_write with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [File_write]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type string and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function File_write
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = File
Object C++ Type = File
Attr = contents
Callee = File_contents
Symbol = Symbol(name='File_contents', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='File_contents', ret_type=ClassType(type='string', generic_types=[]), params=[], body=None, overloads=[], flags=FunctionFlags(static=False, property=True, method=False, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function File_contents with 0 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [File_contents]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function File_contents
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = float
Object C++ Type = float
Attr = decimal
Callee = float_decimal
Symbol = Symbol(name='float_decimal', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='float_decimal', ret_type=PrimitiveType(type='float'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=True, method=False, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='float')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function float_decimal with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [float_decimal]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function float_decimal
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = float
Object C++ Type = float
Attr = integer
Callee = float_integer
Symbol = Symbol(name='float_integer', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='float_integer', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=True, method=False, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='float')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function float_integer with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [float_integer]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function float_integer
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = pi
Callee = Math_pi
Symbol = Symbol(name='Math_pi', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_pi', ret_type=PrimitiveType(type='float'), params=[], body=None, overloads=[], flags=FunctionFlags(static=True, property=True, method=False, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_pi with 0 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_pi]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function Math_pi
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = e
Callee = Math_e
Symbol = Symbol(name='Math_e', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_e', ret_type=PrimitiveType(type='float'), params=[], body=None, overloads=[], flags=FunctionFlags(static=True, property=True, method=False, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_e with 0 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_e]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function Math_e
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = abs
Callee = Math_abs
Symbol = Symbol(name='Math_abs', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_abs', ret_type=PrimitiveType(type='float'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[Function(type=PrimitiveType(type='function'), name='Math_abs', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math'))], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_abs with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_abs, Math_abs]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type int
11:24:14 [DEBUG] ir.py (line 451) - Type mismatch with Param Type float and Arg Type int
Param Type Display = float
Param C++ Type = float
Param Type = PrimitiveType(type='float')
Arg Type Display = int
Arg C++ Type = int
Arg Type = PrimitiveType(type='int')
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function Math_abs
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = abs
Callee = Math_abs
Symbol = Symbol(name='Math_abs', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_abs', ret_type=PrimitiveType(type='float'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[Function(type=PrimitiveType(type='function'), name='Math_abs', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math'))], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_abs with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_abs, Math_abs]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function Math_abs
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = floor
Callee = Math_floor
Symbol = Symbol(name='Math_floor', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_floor', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_floor with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_floor]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function Math_floor
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = ceil
Callee = Math_ceil
Symbol = Symbol(name='Math_ceil', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_ceil', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_ceil with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_ceil]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function Math_ceil
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = sqrt
Callee = Math_sqrt
Symbol = Symbol(name='Math_sqrt', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_sqrt', ret_type=PrimitiveType(type='float'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[Function(type=PrimitiveType(type='function'), name='Math_sqrt', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math'))], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_sqrt with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_sqrt, Math_sqrt]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type int
11:24:14 [DEBUG] ir.py (line 451) - Type mismatch with Param Type float and Arg Type int
Param Type Display = float
Param C++ Type = float
Param Type = PrimitiveType(type='float')
Arg Type Display = int
Arg C++ Type = int
Arg Type = PrimitiveType(type='int')
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function Math_sqrt
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = Math
Object C++ Type = Math
Attr = sqrt
Callee = Math_sqrt
Symbol = Symbol(name='Math_sqrt', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='Math_sqrt', ret_type=PrimitiveType(type='float'), params=[Param(type=PrimitiveType(type='float'), name='x', is_mutable=False, default=None)], body=None, overloads=[Function(type=PrimitiveType(type='function'), name='Math_sqrt', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='x', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math'))], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=False), generic_names=[], extend_type=PrimitiveType(type='Math')), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function Math_sqrt with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [Math_sqrt, Math_sqrt]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function Math_sqrt
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = StringBuilder
Object C++ Type = StringBuilder
Attr = new
Callee = StringBuilder_new
Symbol = Symbol(name='StringBuilder_new', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='StringBuilder_new', ret_type=ClassType(type='StringBuilder', generic_types=[]), params=[], body=None, overloads=[], flags=FunctionFlags(static=True, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function StringBuilder_new with 0 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [StringBuilder_new]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function StringBuilder_new
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = StringBuilder
Object C++ Type = StringBuilder
Attr = add
Callee = StringBuilder_add
Symbol = Symbol(name='StringBuilder_add', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='StringBuilder_add', ret_type=PrimitiveType(type='nil'), params=[Param(type=PrimitiveType(type='T'), name='s', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=['T'], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function StringBuilder_add with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [StringBuilder_add]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function StringBuilder_add
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = StringBuilder
Object C++ Type = StringBuilder
Attr = add
Callee = StringBuilder_add
Symbol = Symbol(name='StringBuilder_add', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='StringBuilder_add', ret_type=PrimitiveType(type='nil'), params=[Param(type=PrimitiveType(type='T'), name='s', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=['T'], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function StringBuilder_add with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [StringBuilder_add]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function StringBuilder_add
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type StringBuilder
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = StringBuilder
Object C++ Type = StringBuilder
Attr = str
Callee = StringBuilder_str
Symbol = Symbol(name='StringBuilder_str', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='StringBuilder_str', ret_type=ClassType(type='string', generic_types=[]), params=[], body=None, overloads=[], flags=FunctionFlags(static=False, property=True, method=False, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function StringBuilder_str with 0 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [StringBuilder_str]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function StringBuilder_str
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type string
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:14 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:14 [DEBUG] ir.py (line 911) - Callee = int_add_int
Callee Symbol = Symbol(name='int_add_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_add_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function int_add_int with 2 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [int_add_int]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function int_add_int
11:24:14 [INFO] ir.py (line 433) - Calling function test with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [test]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function test
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:14 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:14 [DEBUG] ir.py (line 911) - Callee = int_add_int
Callee Symbol = Symbol(name='int_add_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_add_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function int_add_int with 2 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [int_add_int]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function int_add_int
11:24:14 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = float
Left C++ Type = float
11:24:14 [DEBUG] ir.py (line 901) - Right Type Display = float
Right Object Type = float

11:24:14 [DEBUG] ir.py (line 911) - Callee = float_add_float
Callee Symbol = Symbol(name='float_add_float', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='float_add_float', ret_type=PrimitiveType(type='float'), params=[Param(type=PrimitiveType(type='float'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='float'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:14 [INFO] ir.py (line 433) - Calling function float_add_float with 2 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [float_add_float]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function float_add_float
11:24:14 [INFO] ir.py (line 433) - Calling function test with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [test, test]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function test
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [INFO] ir.py (line 433) - Calling function test with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [test, test]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type float
11:24:14 [DEBUG] ir.py (line 451) - Type mismatch with Param Type int and Arg Type float
Param Type Display = int
Param C++ Type = int
Param Type = PrimitiveType(type='int')
Arg Type Display = float
Arg C++ Type = float
Arg Type = PrimitiveType(type='float')
11:24:14 [INFO] ir.py (line 446) - Checking Param Type float and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function test
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type float
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int[]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:14 [INFO] ir.py (line 599) - Defining class string
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:14 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:14 [INFO] ir.py (line 606) - Generics = {}
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member str
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:14 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:14 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:14 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:14 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:14 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:14 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:14 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:14 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:14 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:14 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int[]
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': ArrayType(type='int[]', element_type=PrimitiveType(type='int'))}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[][] (Type = array<array<int>>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[][]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[][]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[][]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int[]
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[][]_add
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int[]
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[][]_get
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int[]
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[][]_set
11:24:14 [INFO] ir.py (line 599) - Defining class array
11:24:14 [INFO] ir.py (line 604) - Added generic type T = int
11:24:14 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:14 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:14 [DEBUG] ir.py (line 562) - Adding class member new
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:14 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:14 [DEBUG] ir.py (line 562) - Adding class member length
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:14 [DEBUG] ir.py (line 562) - Adding class member add
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:14 [DEBUG] ir.py (line 562) - Adding class member get
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:14 [DEBUG] ir.py (line 562) - Adding class member set
11:24:14 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:14 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:14 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:14 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:14 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:14 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:14 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int[][]
11:24:14 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:14 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:14 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:14 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:14 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:14 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:15 [INFO] ir.py (line 599) - Defining class string
11:24:15 [INFO] ir.py (line 606) - Generics = {}
11:24:15 [DEBUG] ir.py (line 562) - Adding class member length
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:15 [DEBUG] ir.py (line 562) - Adding class member set
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:15 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:15 [INFO] ir.py (line 606) - Generics = {}
11:24:15 [DEBUG] ir.py (line 562) - Adding class member new
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:15 [DEBUG] ir.py (line 562) - Adding class member str
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:15 [DEBUG] ir.py (line 562) - Adding class member add
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:15 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:15 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:15 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:15 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:15 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:15 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:15 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:15 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:15 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:15 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:15 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:15 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:15 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:15 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:15 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:15 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:15 [INFO] ir.py (line 433) - Calling function input with 0 arguments
11:24:15 [DEBUG] ir.py (line 437) - Possible functions = [input, input]
11:24:15 [DEBUG] ir.py (line 482) - Found valid callable function input
11:24:15 [INFO] ir.py (line 433) - Calling function input with 1 arguments
11:24:15 [DEBUG] ir.py (line 437) - Possible functions = [input, input]
11:24:15 [INFO] ir.py (line 446) - Checking Param Type string and Arg Type string
11:24:15 [DEBUG] ir.py (line 482) - Found valid callable function input
11:24:15 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:15 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:15 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:15 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:15 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:15 [INFO] ir.py (line 599) - Defining class string
11:24:15 [INFO] ir.py (line 606) - Generics = {}
11:24:15 [DEBUG] ir.py (line 562) - Adding class member length
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:15 [DEBUG] ir.py (line 562) - Adding class member set
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:15 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:15 [INFO] ir.py (line 606) - Generics = {}
11:24:15 [DEBUG] ir.py (line 562) - Adding class member new
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:15 [DEBUG] ir.py (line 562) - Adding class member str
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:15 [DEBUG] ir.py (line 562) - Adding class member add
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:15 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:15 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:15 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:15 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:15 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:15 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:15 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:15 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:15 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:15 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:15 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:15 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:15 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:15 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:15 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:15 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:15 [INFO] ir.py (line 433) - Calling function print with 1 arguments
11:24:15 [DEBUG] ir.py (line 437) - Possible functions = [print]
11:24:15 [INFO] ir.py (line 446) - Checking Param Type T and Arg Type int
11:24:15 [DEBUG] ir.py (line 482) - Found valid callable function print
11:24:15 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:15 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:15 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:15 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:15 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:15 [INFO] ir.py (line 599) - Defining class string
11:24:15 [INFO] ir.py (line 606) - Generics = {}
11:24:15 [DEBUG] ir.py (line 562) - Adding class member length
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:15 [DEBUG] ir.py (line 562) - Adding class member set
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:15 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:15 [INFO] ir.py (line 606) - Generics = {}
11:24:15 [DEBUG] ir.py (line 562) - Adding class member new
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:15 [DEBUG] ir.py (line 562) - Adding class member str
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:15 [DEBUG] ir.py (line 562) - Adding class member add
11:24:15 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:15 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:15 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:15 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:15 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:15 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:15 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:15 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:15 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:15 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:15 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:15 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:15 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:15 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:15 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:15 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:15 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:15 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:15 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:15 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:15 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:15 [DEBUG] ir.py (line 911) - Callee = int_eq_int
Callee Symbol = Symbol(name='int_eq_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_eq_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:15 [INFO] ir.py (line 433) - Calling function int_eq_int with 2 arguments
11:24:15 [DEBUG] ir.py (line 437) - Possible functions = [int_eq_int]
11:24:15 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:15 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:15 [DEBUG] ir.py (line 482) - Found valid callable function int_eq_int
11:24:15 [INFO] ir.py (line 433) - Calling function assert with 1 arguments
11:24:15 [DEBUG] ir.py (line 437) - Possible functions = [assert, assert]
11:24:15 [INFO] ir.py (line 446) - Checking Param Type bool and Arg Type bool
11:24:15 [DEBUG] ir.py (line 482) - Found valid callable function assert
11:24:15 [DEBUG] __init__.py (line 35) - Build Directory = C:\Programming\Python\Cure\cure\tests\runtime\build
11:24:15 [DEBUG] __init__.py (line 39) - Build Type = Debug
11:24:15 [DEBUG] __init__.py (line 40) - CMake Name = test1
11:24:15 [DEBUG] __init__.py (line 44) - main.cpp = C:\Programming\Python\Cure\cure\tests\runtime\build\main.cpp
11:24:15 [DEBUG] __init__.py (line 27) - Running CMake commands (cmake -B C:/Programming/Python/Cure/cure/tests/runtime/build -S=C:/Programming/Python/Cure/cure/tests/runtime/build -G "Ninja" and cmake --build C:/Programming/Python/Cure/cure/tests/runtime/build)
11:24:18 [DEBUG] __init__.py (line 75) - Executable Name = test1.exe
11:24:18 [DEBUG] __init__.py (line 78) - Built Executable File = C:\Programming\Python\Cure\cure\tests\runtime\build\test1.exe
11:24:18 [DEBUG] __init__.py (line 86) - Executable File = C:\Programming\Python\Cure\cure\tests\runtime\test1.exe
11:24:18 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:18 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:18 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:18 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:18 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:18 [INFO] ir.py (line 599) - Defining class string
11:24:18 [INFO] ir.py (line 606) - Generics = {}
11:24:18 [DEBUG] ir.py (line 562) - Adding class member length
11:24:18 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:18 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:18 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:18 [DEBUG] ir.py (line 562) - Adding class member set
11:24:18 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:18 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:18 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:18 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:18 [INFO] ir.py (line 606) - Generics = {}
11:24:18 [DEBUG] ir.py (line 562) - Adding class member new
11:24:18 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:18 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:18 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:18 [DEBUG] ir.py (line 562) - Adding class member str
11:24:18 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:18 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:18 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:18 [DEBUG] ir.py (line 562) - Adding class member add
11:24:18 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:18 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:18 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:18 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:18 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:18 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:18 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:18 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:18 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:18 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:18 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:18 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:18 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:18 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:18 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:18 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:18 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:18 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:18 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:18 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:18 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:18 [DEBUG] ir.py (line 911) - Callee = int_lt_int
Callee Symbol = Symbol(name='int_lt_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_lt_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:18 [INFO] ir.py (line 433) - Calling function int_lt_int with 2 arguments
11:24:18 [DEBUG] ir.py (line 437) - Possible functions = [int_lt_int]
11:24:18 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:18 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:18 [DEBUG] ir.py (line 482) - Found valid callable function int_lt_int
11:24:18 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:18 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:18 [DEBUG] ir.py (line 911) - Callee = int_add_int
Callee Symbol = Symbol(name='int_add_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_add_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:18 [INFO] ir.py (line 433) - Calling function int_add_int with 2 arguments
11:24:18 [DEBUG] ir.py (line 437) - Possible functions = [int_add_int]
11:24:18 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:18 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:18 [DEBUG] ir.py (line 482) - Found valid callable function int_add_int
11:24:18 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:18 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:18 [DEBUG] ir.py (line 911) - Callee = int_eq_int
Callee Symbol = Symbol(name='int_eq_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_eq_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:18 [INFO] ir.py (line 433) - Calling function int_eq_int with 2 arguments
11:24:18 [DEBUG] ir.py (line 437) - Possible functions = [int_eq_int]
11:24:18 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:18 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:18 [DEBUG] ir.py (line 482) - Found valid callable function int_eq_int
11:24:18 [INFO] ir.py (line 433) - Calling function assert with 1 arguments
11:24:18 [DEBUG] ir.py (line 437) - Possible functions = [assert, assert]
11:24:18 [INFO] ir.py (line 446) - Checking Param Type bool and Arg Type bool
11:24:18 [DEBUG] ir.py (line 482) - Found valid callable function assert
11:24:18 [DEBUG] __init__.py (line 35) - Build Directory = C:\Programming\Python\Cure\cure\tests\runtime\build
11:24:18 [DEBUG] __init__.py (line 39) - Build Type = Debug
11:24:18 [DEBUG] __init__.py (line 40) - CMake Name = test2
11:24:18 [DEBUG] __init__.py (line 44) - main.cpp = C:\Programming\Python\Cure\cure\tests\runtime\build\main.cpp
11:24:18 [DEBUG] __init__.py (line 27) - Running CMake commands (cmake -B C:/Programming/Python/Cure/cure/tests/runtime/build -S=C:/Programming/Python/Cure/cure/tests/runtime/build -G "Ninja" and cmake --build C:/Programming/Python/Cure/cure/tests/runtime/build)
11:24:19 [DEBUG] __init__.py (line 75) - Executable Name = test2.exe
11:24:19 [DEBUG] __init__.py (line 78) - Built Executable File = C:\Programming\Python\Cure\cure\tests\runtime\build\test2.exe
11:24:19 [DEBUG] __init__.py (line 86) - Executable File = C:\Programming\Python\Cure\cure\tests\runtime\test2.exe
11:24:19 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:19 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:19 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:19 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:19 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:19 [INFO] ir.py (line 599) - Defining class string
11:24:19 [INFO] ir.py (line 606) - Generics = {}
11:24:19 [DEBUG] ir.py (line 562) - Adding class member length
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:19 [DEBUG] ir.py (line 562) - Adding class member set
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:19 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:19 [INFO] ir.py (line 606) - Generics = {}
11:24:19 [DEBUG] ir.py (line 562) - Adding class member new
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:19 [DEBUG] ir.py (line 562) - Adding class member str
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:19 [DEBUG] ir.py (line 562) - Adding class member add
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:19 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:19 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:19 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:19 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:19 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:19 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:19 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:19 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:19 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:19 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:19 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:19 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:19 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:19 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:19 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:19 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:19 [INFO] ir.py (line 599) - Defining class array
11:24:19 [INFO] ir.py (line 604) - Added generic type T = int
11:24:19 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:19 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:19 [DEBUG] ir.py (line 562) - Adding class member new
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:19 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:19 [DEBUG] ir.py (line 562) - Adding class member length
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:19 [DEBUG] ir.py (line 562) - Adding class member add
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:19 [DEBUG] ir.py (line 562) - Adding class member get
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:19 [DEBUG] ir.py (line 562) - Adding class member set
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:19 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = int[]
Object C++ Type = array<int>
Attr = length
Callee = int[]_length
Symbol = Symbol(name='int[]_length', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int[]_length', ret_type=PrimitiveType(type='int'), params=[], body=None, overloads=[], flags=FunctionFlags(static=False, property=True, method=False, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int[]_length with 0 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int[]_length]
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int[]_length
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_sub_int
Callee Symbol = Symbol(name='int_sub_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_sub_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = int[]
Object C++ Type = array<int>
Attr = length
Callee = int[]_length
Symbol = Symbol(name='int[]_length', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int[]_length', ret_type=PrimitiveType(type='int'), params=[], body=None, overloads=[], flags=FunctionFlags(static=False, property=True, method=False, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int[]_length with 0 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int[]_length]
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int[]_length
11:24:19 [INFO] ir.py (line 433) - Calling function int_sub_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_sub_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_sub_int
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_lte_int
Callee Symbol = Symbol(name='int_lte_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_lte_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int_lte_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_lte_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_lte_int
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_add_int
Callee Symbol = Symbol(name='int_add_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_add_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int_add_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_add_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_add_int
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_div_int
Callee Symbol = Symbol(name='int_div_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_div_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int_add_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_add_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_add_int
11:24:19 [INFO] ir.py (line 433) - Calling function int_div_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_div_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_div_int
11:24:19 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = int[]
Object C++ Type = array<int>
Attr = get
Callee = int[]_get
Symbol = Symbol(name='int[]_get', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int[]_get', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='index', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int[]_get with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int[]_get]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int[]_get
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_eq_int
Callee Symbol = Symbol(name='int_eq_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_eq_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = int[]
Object C++ Type = array<int>
Attr = get
Callee = int[]_get
Symbol = Symbol(name='int[]_get', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int[]_get', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='index', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int[]_get with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int[]_get]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int[]_get
11:24:19 [INFO] ir.py (line 433) - Calling function int_eq_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_eq_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_eq_int
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_sub_int
Callee Symbol = Symbol(name='int_sub_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_sub_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int_sub_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_sub_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_sub_int
11:24:19 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = int[]
Object C++ Type = array<int>
Attr = get
Callee = int[]_get
Symbol = Symbol(name='int[]_get', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int[]_get', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='index', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int[]_get with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int[]_get]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int[]_get
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_lt_int
Callee Symbol = Symbol(name='int_lt_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_lt_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [DEBUG] ir.py (line 972) - Analysing Attribute node
Object Type Display = int[]
Object C++ Type = array<int>
Attr = get
Callee = int[]_get
Symbol = Symbol(name='int[]_get', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int[]_get', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='index', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=True, public=False, internal=True), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int[]_get with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int[]_get]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int[]_get
11:24:19 [INFO] ir.py (line 433) - Calling function int_lt_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_lt_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_lt_int
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_add_int
Callee Symbol = Symbol(name='int_add_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_add_int', ret_type=PrimitiveType(type='int'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function int_add_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_add_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_add_int
11:24:19 [INFO] ir.py (line 599) - Defining class array
11:24:19 [INFO] ir.py (line 604) - Added generic type T = int
11:24:19 [INFO] ir.py (line 606) - Generics = {'T': PrimitiveType(type='int')}
11:24:19 [DEBUG] ir.py (line 622) - Created generic class type int[] (Type = array<int>)
11:24:19 [DEBUG] ir.py (line 562) - Adding class member new
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_new
11:24:19 [DEBUG] ir.py (line 562) - Adding class member to_string
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_to_string
11:24:19 [DEBUG] ir.py (line 562) - Adding class member length
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_length
11:24:19 [DEBUG] ir.py (line 562) - Adding class member add
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_add
11:24:19 [DEBUG] ir.py (line 562) - Adding class member get
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_get
11:24:19 [DEBUG] ir.py (line 562) - Adding class member set
11:24:19 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:19 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:19 [INFO] ir.py (line 557) - Replacing return type with generic type int
11:24:19 [DEBUG] ir.py (line 586) - Creating method with name int[]_set
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_eq_int
Callee Symbol = Symbol(name='int_eq_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_eq_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [INFO] ir.py (line 433) - Calling function int_eq_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_eq_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_eq_int
11:24:19 [INFO] ir.py (line 433) - Calling function assert with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [assert, assert]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type bool and Arg Type bool
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function assert
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_eq_int
Callee Symbol = Symbol(name='int_eq_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_eq_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [INFO] ir.py (line 433) - Calling function int_eq_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_eq_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_eq_int
11:24:19 [INFO] ir.py (line 433) - Calling function assert with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [assert, assert]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type bool and Arg Type bool
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function assert
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_eq_int
Callee Symbol = Symbol(name='int_eq_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_eq_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [INFO] ir.py (line 433) - Calling function int_eq_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_eq_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_eq_int
11:24:19 [INFO] ir.py (line 433) - Calling function assert with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [assert, assert]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type bool and Arg Type bool
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function assert
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_eq_int
Callee Symbol = Symbol(name='int_eq_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_eq_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [INFO] ir.py (line 433) - Calling function int_eq_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_eq_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_eq_int
11:24:19 [INFO] ir.py (line 433) - Calling function assert with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [assert, assert]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type bool and Arg Type bool
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function assert
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [DEBUG] ir.py (line 892) - Analysing Operation node
Left Type Display = int
Left C++ Type = int
11:24:19 [DEBUG] ir.py (line 901) - Right Type Display = int
Right Object Type = int

11:24:19 [DEBUG] ir.py (line 911) - Callee = int_eq_int
Callee Symbol = Symbol(name='int_eq_int', type=PrimitiveType(type='function'), value=Function(type=PrimitiveType(type='function'), name='int_eq_int', ret_type=PrimitiveType(type='bool'), params=[Param(type=PrimitiveType(type='int'), name='a', is_mutable=False, default=None), Param(type=PrimitiveType(type='int'), name='b', is_mutable=False, default=None)], body=None, overloads=[], flags=FunctionFlags(static=False, property=False, method=False, public=False, internal=False), generic_names=[], extend_type=None), is_mutable=False)
11:24:19 [INFO] ir.py (line 433) - Calling function binary_search with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [binary_search]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int[] and Arg Type int[]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function binary_search
11:24:19 [INFO] ir.py (line 433) - Calling function int_eq_int with 2 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [int_eq_int]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [INFO] ir.py (line 446) - Checking Param Type int and Arg Type int
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function int_eq_int
11:24:19 [INFO] ir.py (line 433) - Calling function assert with 1 arguments
11:24:19 [DEBUG] ir.py (line 437) - Possible functions = [assert, assert]
11:24:19 [INFO] ir.py (line 446) - Checking Param Type bool and Arg Type bool
11:24:19 [DEBUG] ir.py (line 482) - Found valid callable function assert
11:24:19 [DEBUG] __init__.py (line 35) - Build Directory = C:\Programming\Python\Cure\cure\tests\runtime\build
11:24:19 [DEBUG] __init__.py (line 39) - Build Type = Debug
11:24:19 [DEBUG] __init__.py (line 40) - CMake Name = test3
11:24:19 [DEBUG] __init__.py (line 44) - main.cpp = C:\Programming\Python\Cure\cure\tests\runtime\build\main.cpp
11:24:19 [DEBUG] __init__.py (line 27) - Running CMake commands (cmake -B C:/Programming/Python/Cure/cure/tests/runtime/build -S=C:/Programming/Python/Cure/cure/tests/runtime/build -G "Ninja" and cmake --build C:/Programming/Python/Cure/cure/tests/runtime/build)
11:24:21 [DEBUG] __init__.py (line 75) - Executable Name = test3.exe
11:24:21 [DEBUG] __init__.py (line 78) - Built Executable File = C:\Programming\Python\Cure\cure\tests\runtime\build\test3.exe
11:24:21 [DEBUG] __init__.py (line 86) - Executable File = C:\Programming\Python\Cure\cure\tests\runtime\test3.exe
11:24:21 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:21 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:21 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:21 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:21 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:21 [INFO] ir.py (line 599) - Defining class string
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member length
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:21 [DEBUG] ir.py (line 562) - Adding class member set
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:21 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member new
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:21 [DEBUG] ir.py (line 562) - Adding class member str
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:21 [DEBUG] ir.py (line 562) - Adding class member add
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:21 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:21 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:21 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:21 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:21 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:21 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:21 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:21 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:21 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:21 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:21 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:21 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:21 [INFO] ir.py (line 599) - Defining class string
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member length
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:21 [DEBUG] ir.py (line 562) - Adding class member set
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:21 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member new
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:21 [DEBUG] ir.py (line 562) - Adding class member str
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:21 [DEBUG] ir.py (line 562) - Adding class member add
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:21 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:21 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:21 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:21 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:21 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:21 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:21 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:21 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:21 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:21 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:21 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:21 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:21 [INFO] ir.py (line 599) - Defining class string
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member length
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:21 [DEBUG] ir.py (line 562) - Adding class member set
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:21 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member new
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:21 [DEBUG] ir.py (line 562) - Adding class member str
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:21 [DEBUG] ir.py (line 562) - Adding class member add
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:21 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:21 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:21 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:21 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:21 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:21 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:21 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:21 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:21 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:21 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:21 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:21 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:21 [INFO] ir.py (line 599) - Defining class string
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member length
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:21 [DEBUG] ir.py (line 562) - Adding class member set
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:21 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member new
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:21 [DEBUG] ir.py (line 562) - Adding class member str
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:21 [DEBUG] ir.py (line 562) - Adding class member add
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:21 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:21 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:21 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:21 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:21 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:21 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:21 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:21 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:21 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:21 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:21 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:21 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:21 [INFO] ir.py (line 599) - Defining class string
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member length
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:21 [DEBUG] ir.py (line 562) - Adding class member set
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:21 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member new
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:21 [DEBUG] ir.py (line 562) - Adding class member str
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:21 [DEBUG] ir.py (line 562) - Adding class member add
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:21 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:21 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:21 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:21 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:21 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:21 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:21 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:21 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:21 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:21 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:21 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:21 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:21 [INFO] ir.py (line 599) - Defining class string
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member length
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:21 [DEBUG] ir.py (line 562) - Adding class member set
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:21 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member new
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:21 [DEBUG] ir.py (line 562) - Adding class member str
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:21 [DEBUG] ir.py (line 562) - Adding class member add
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:21 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:21 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:21 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:21 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:21 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:21 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:21 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:21 [DEBUG] ir.py (line 152) - Using builtins at Path C:\Programming\Python\Cure\builtins
11:24:21 [DEBUG] ir.py (line 158) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
11:24:21 [DEBUG] ir.py (line 164) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
11:24:21 [DEBUG] ir.py (line 172) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
11:24:21 [INFO] ir.py (line 178) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
11:24:21 [INFO] ir.py (line 599) - Defining class string
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member length
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_length
11:24:21 [DEBUG] ir.py (line 562) - Adding class member set
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name string_set
11:24:21 [INFO] ir.py (line 599) - Defining class StringBuilder
11:24:21 [INFO] ir.py (line 606) - Generics = {}
11:24:21 [DEBUG] ir.py (line 562) - Adding class member new
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_new
11:24:21 [DEBUG] ir.py (line 562) - Adding class member str
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_str
11:24:21 [DEBUG] ir.py (line 562) - Adding class member add
11:24:21 [DEBUG] ir.py (line 572) - Member needs self parameter = False
11:24:21 [DEBUG] ir.py (line 573) - Member is internal = True
11:24:21 [DEBUG] ir.py (line 586) - Creating method with name StringBuilder_add
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type int, mangled name = int_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type int, mangled name = int_min
11:24:21 [DEBUG] ir.py (line 388) - Function max extends type float, mangled name = float_max
11:24:21 [DEBUG] ir.py (line 388) - Function min extends type float, mangled name = float_min
11:24:21 [DEBUG] ir.py (line 388) - Function decimal extends type float, mangled name = float_decimal
11:24:21 [DEBUG] ir.py (line 388) - Function integer extends type float, mangled name = float_integer
11:24:21 [DEBUG] ir.py (line 388) - Function pi extends type Math, mangled name = Math_pi
11:24:21 [DEBUG] ir.py (line 388) - Function e extends type Math, mangled name = Math_e
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function abs extends type Math, mangled name = Math_abs
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function sqrt extends type Math, mangled name = Math_sqrt
11:24:21 [DEBUG] ir.py (line 388) - Function floor extends type Math, mangled name = Math_floor
11:24:21 [DEBUG] ir.py (line 388) - Function ceil extends type Math, mangled name = Math_ceil
11:24:21 [DEBUG] ir.py (line 181) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
11:24:21 [INFO] ir.py (line 190) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
11:24:21 [INFO] main.py (line 22) - Successfully ran Cure compiler
