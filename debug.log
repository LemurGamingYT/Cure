16:14:17 [INFO] main.py (line 11) - Running Cure compiler
System = Windows
Architecture = 64bit
Platform = Windows-11-10.0.26100-SP0
Processor = Intel64 Family 6 Model 142 Stepping 12, GenuineIntel
Machine = AMD64

16:14:17 [DEBUG] __init__.py (line 101) - CLI Action = build
16:14:17 [DEBUG] __init__.py (line 133) - File Path = examples/test.cure
16:14:17 [DEBUG] __init__.py (line 140) - Path = examples\test.cure
16:14:17 [DEBUG] ir.py (line 153) - Using builtins at Path C:\Programming\Python\Cure\builtins
16:14:17 [DEBUG] ir.py (line 159) - C:\Programming\Python\Cure\builtins doesn't exist, checking if builtins is part of the standard library at C:\Programming\Python\Cure\cure\stdlib\builtins
16:14:17 [DEBUG] ir.py (line 165) - Found header file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins.hpp, relative path = builtins\builtins.hpp
16:14:17 [DEBUG] ir.py (line 173) - Found cure file C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure
16:14:17 [INFO] ir.py (line 179) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a local file
16:14:17 [INFO] ir.py (line 676) - Defining class string
16:14:17 [INFO] ir.py (line 683) - Generics = {}
16:14:17 [DEBUG] ir.py (line 623) - Adding class member get
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_get
16:14:17 [DEBUG] ir.py (line 623) - Adding class member set
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_set
16:14:17 [DEBUG] ir.py (line 623) - Adding class member contains
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_contains
16:14:17 [DEBUG] ir.py (line 623) - Adding class member startswith
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_startswith
16:14:17 [DEBUG] ir.py (line 623) - Adding class member endswith
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_endswith
16:14:17 [DEBUG] ir.py (line 623) - Adding class member index_of
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_index_of
16:14:17 [DEBUG] ir.py (line 623) - Adding class member repeat
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_repeat
16:14:17 [DEBUG] ir.py (line 623) - Adding class member length
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_length
16:14:17 [DEBUG] ir.py (line 623) - Adding class member lowercase
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_lowercase
16:14:17 [DEBUG] ir.py (line 623) - Adding class member uppercase
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_uppercase
16:14:17 [DEBUG] ir.py (line 623) - Adding class member is_alpha
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_is_alpha
16:14:17 [DEBUG] ir.py (line 623) - Adding class member is_empty
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_is_empty
16:14:17 [DEBUG] ir.py (line 623) - Adding class member is_digit
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_is_digit
16:14:17 [DEBUG] ir.py (line 623) - Adding class member is_alphanumeric
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_is_alphanumeric
16:14:17 [DEBUG] ir.py (line 623) - Adding class member is_whitespace
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_is_whitespace
16:14:17 [DEBUG] ir.py (line 623) - Adding class member reversed
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_reversed
16:14:17 [DEBUG] ir.py (line 623) - Adding class member +
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_add_string
16:14:17 [DEBUG] ir.py (line 623) - Adding class member ==
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_eq_string
16:14:17 [DEBUG] ir.py (line 623) - Adding class member !=
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name string_neq_string
16:14:17 [INFO] ir.py (line 676) - Defining class StringBuilder
16:14:17 [INFO] ir.py (line 683) - Generics = {}
16:14:17 [DEBUG] ir.py (line 623) - Adding class member new
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name StringBuilder_new
16:14:17 [DEBUG] ir.py (line 623) - Adding class member add
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name StringBuilder_add
16:14:17 [DEBUG] ir.py (line 623) - Adding class member clear
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name StringBuilder_clear
16:14:17 [DEBUG] ir.py (line 623) - Adding class member str
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name StringBuilder_str
16:14:17 [DEBUG] ir.py (line 623) - Adding class member ==
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name StringBuilder_eq_StringBuilder
16:14:17 [DEBUG] ir.py (line 623) - Adding class member !=
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name StringBuilder_neq_StringBuilder
16:14:17 [INFO] ir.py (line 676) - Defining class Vector2
16:14:17 [INFO] ir.py (line 683) - Generics = {}
16:14:17 [DEBUG] ir.py (line 623) - Adding class member new
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_new
16:14:17 [DEBUG] ir.py (line 623) - Adding class member new
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_new
16:14:17 [DEBUG] ir.py (line 623) - Adding class member distance
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_distance
16:14:17 [DEBUG] ir.py (line 623) - Adding class member distance_squared
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_distance_squared
16:14:17 [DEBUG] ir.py (line 623) - Adding class member x
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_x
16:14:17 [DEBUG] ir.py (line 623) - Adding class member y
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_y
16:14:17 [DEBUG] ir.py (line 623) - Adding class member length
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_length
16:14:17 [DEBUG] ir.py (line 623) - Adding class member length_squared
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_length_squared
16:14:17 [DEBUG] ir.py (line 623) - Adding class member normalized
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_normalized
16:14:17 [DEBUG] ir.py (line 623) - Adding class member +
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_add_Vector2
16:14:17 [DEBUG] ir.py (line 623) - Adding class member -
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_sub_Vector2
16:14:17 [DEBUG] ir.py (line 623) - Adding class member *
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_mul_Vector2
16:14:17 [DEBUG] ir.py (line 623) - Adding class member /
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_div_Vector2
16:14:17 [DEBUG] ir.py (line 623) - Adding class member ==
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_eq_Vector2
16:14:17 [DEBUG] ir.py (line 623) - Adding class member !=
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector2_neq_Vector2
16:14:17 [INFO] ir.py (line 676) - Defining class Vector3
16:14:17 [INFO] ir.py (line 683) - Generics = {}
16:14:17 [DEBUG] ir.py (line 623) - Adding class member new
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_new
16:14:17 [DEBUG] ir.py (line 623) - Adding class member new
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_new
16:14:17 [DEBUG] ir.py (line 623) - Adding class member distance
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_distance
16:14:17 [DEBUG] ir.py (line 623) - Adding class member distance_squared
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_distance_squared
16:14:17 [DEBUG] ir.py (line 623) - Adding class member x
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_x
16:14:17 [DEBUG] ir.py (line 623) - Adding class member y
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_y
16:14:17 [DEBUG] ir.py (line 623) - Adding class member length
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_length
16:14:17 [DEBUG] ir.py (line 623) - Adding class member length_squared
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_length_squared
16:14:17 [DEBUG] ir.py (line 623) - Adding class member normalized
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_normalized
16:14:17 [DEBUG] ir.py (line 623) - Adding class member +
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_add_Vector3
16:14:17 [DEBUG] ir.py (line 623) - Adding class member -
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_sub_Vector3
16:14:17 [DEBUG] ir.py (line 623) - Adding class member *
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_mul_Vector3
16:14:17 [DEBUG] ir.py (line 623) - Adding class member /
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_div_Vector3
16:14:17 [DEBUG] ir.py (line 623) - Adding class member ==
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_eq_Vector3
16:14:17 [DEBUG] ir.py (line 623) - Adding class member !=
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name Vector3_neq_Vector3
16:14:17 [DEBUG] ir.py (line 485) - Function max extends type int, mangled name = int_max
16:14:17 [DEBUG] ir.py (line 485) - Function min extends type int, mangled name = int_min
16:14:17 [DEBUG] ir.py (line 485) - Function max extends type float, mangled name = float_max
16:14:17 [DEBUG] ir.py (line 485) - Function min extends type float, mangled name = float_min
16:14:17 [DEBUG] ir.py (line 485) - Function decimal extends type float, mangled name = float_decimal
16:14:17 [DEBUG] ir.py (line 485) - Function integer extends type float, mangled name = float_integer
16:14:17 [DEBUG] ir.py (line 485) - Function pi extends type Math, mangled name = Math_pi
16:14:17 [DEBUG] ir.py (line 485) - Function e extends type Math, mangled name = Math_e
16:14:17 [DEBUG] ir.py (line 485) - Function abs extends type Math, mangled name = Math_abs
16:14:17 [DEBUG] ir.py (line 485) - Function abs extends type Math, mangled name = Math_abs
16:14:17 [DEBUG] ir.py (line 485) - Function sqrt extends type Math, mangled name = Math_sqrt
16:14:17 [DEBUG] ir.py (line 485) - Function sqrt extends type Math, mangled name = Math_sqrt
16:14:17 [DEBUG] ir.py (line 485) - Function floor extends type Math, mangled name = Math_floor
16:14:17 [DEBUG] ir.py (line 485) - Function ceil extends type Math, mangled name = Math_ceil
16:14:17 [DEBUG] ir.py (line 485) - Function cwd extends type System, mangled name = System_cwd
16:14:17 [DEBUG] ir.py (line 485) - Function pid extends type System, mangled name = System_pid
16:14:17 [DEBUG] ir.py (line 485) - Function exit extends type System, mangled name = System_exit
16:14:17 [DEBUG] ir.py (line 485) - Function exit extends type System, mangled name = System_exit
16:14:17 [DEBUG] ir.py (line 485) - Function sleep extends type System, mangled name = System_sleep
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator +, mangled name = int_add_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator -, mangled name = int_sub_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator *, mangled name = int_mul_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator /, mangled name = int_div_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator %, mangled name = int_mod_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator ==, mangled name = int_eq_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator !=, mangled name = int_neq_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator <, mangled name = int_lt_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator >, mangled name = int_gt_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator <=, mangled name = int_lte_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator >=, mangled name = int_gte_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator +, mangled name = float_add_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator -, mangled name = float_sub_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator *, mangled name = float_mul_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator /, mangled name = float_div_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator %, mangled name = float_mod_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator ==, mangled name = float_eq_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator !=, mangled name = float_neq_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator <, mangled name = float_lt_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator >, mangled name = float_gt_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator <=, mangled name = float_lte_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator >=, mangled name = float_gte_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator +, mangled name = float_add_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator -, mangled name = float_sub_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator *, mangled name = float_mul_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator /, mangled name = float_div_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator %, mangled name = float_mod_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator ==, mangled name = float_eq_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator !=, mangled name = float_neq_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator <, mangled name = float_lt_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator >, mangled name = float_gt_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator <=, mangled name = float_lte_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator >=, mangled name = float_gte_int
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator +, mangled name = int_add_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator -, mangled name = int_sub_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator *, mangled name = int_mul_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator /, mangled name = int_div_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator %, mangled name = int_mod_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator ==, mangled name = int_eq_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator !=, mangled name = int_neq_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator <, mangled name = int_lt_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator >, mangled name = int_gt_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator <=, mangled name = int_lte_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator >=, mangled name = int_gte_float
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator ==, mangled name = bool_eq_bool
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator !=, mangled name = bool_neq_bool
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator &&, mangled name = bool_and_bool
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator ||, mangled name = bool_or_bool
16:14:17 [DEBUG] ir.py (line 480) - Function name is an operator !, mangled name = not_bool
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [DEBUG] ir.py (line 623) - Adding class member new
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_new
16:14:17 [DEBUG] ir.py (line 623) - Adding class member to_string
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_to_string
16:14:17 [DEBUG] ir.py (line 623) - Adding class member add
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_add
16:14:17 [DEBUG] ir.py (line 623) - Adding class member add_all
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_add_all
16:14:17 [DEBUG] ir.py (line 623) - Adding class member remove_first
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_remove_first
16:14:17 [DEBUG] ir.py (line 623) - Adding class member remove_all
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_remove_all
16:14:17 [DEBUG] ir.py (line 623) - Adding class member remove_at
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_remove_at
16:14:17 [DEBUG] ir.py (line 623) - Adding class member get
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_get
16:14:17 [DEBUG] ir.py (line 623) - Adding class member set
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_set
16:14:17 [DEBUG] ir.py (line 623) - Adding class member contains
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_contains
16:14:17 [DEBUG] ir.py (line 623) - Adding class member index_of
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_index_of
16:14:17 [DEBUG] ir.py (line 623) - Adding class member clear
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_clear
16:14:17 [DEBUG] ir.py (line 623) - Adding class member reserve
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_reserve
16:14:17 [DEBUG] ir.py (line 623) - Adding class member reverse
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_reverse
16:14:17 [DEBUG] ir.py (line 623) - Adding class member sort
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_sort
16:14:17 [DEBUG] ir.py (line 623) - Adding class member map
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_map
16:14:17 [DEBUG] ir.py (line 623) - Adding class member filter
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [INFO] ir.py (line 605) - Replacing return type with generic type int
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_filter
16:14:17 [DEBUG] ir.py (line 623) - Adding class member length
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_length
16:14:17 [DEBUG] ir.py (line 623) - Adding class member is_empty
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_is_empty
16:14:17 [DEBUG] ir.py (line 623) - Adding class member reversed
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_reversed
16:14:17 [DEBUG] ir.py (line 623) - Adding class member sorted
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_sorted
16:14:17 [DEBUG] ir.py (line 623) - Adding class member +
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_add_array<int>
16:14:17 [DEBUG] ir.py (line 623) - Adding class member ==
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_eq_array<int>
16:14:17 [DEBUG] ir.py (line 623) - Adding class member !=
16:14:17 [DEBUG] ir.py (line 633) - Member needs self parameter = False
16:14:17 [DEBUG] ir.py (line 634) - Member is internal = True
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [DEBUG] ir.py (line 664) - Creating method with name array<int>_neq_array<int>
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [INFO] ir.py (line 676) - Defining class array
16:14:17 [INFO] ir.py (line 681) - Added generic type T = int
16:14:17 [INFO] ir.py (line 683) - Generics = {'T': PrimitiveType(type='int')}
16:14:17 [DEBUG] ir.py (line 699) - Created generic class type int[] (Type = array<int>)
16:14:17 [INFO] ir.py (line 701) - Generic class already defined
16:14:17 [DEBUG] ir.py (line 182) - Compiled C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure to string
16:14:17 [INFO] ir.py (line 191) - C:\Programming\Python\Cure\cure\stdlib\builtins\builtins_wrapper.cure is a wrapper file, no .hpp file generated
16:14:17 [INFO] __init__.py (line 153) - Compiling to executable
16:14:17 [INFO] ir.py (line 952) - Calling function print with 1 arguments
16:14:17 [DEBUG] ir.py (line 956) - Possible functions = [print]
16:14:17 [DEBUG] ir.py (line 988) - Found valid callable function print
16:14:17 [INFO] ir.py (line 952) - Calling function print with 1 arguments
16:14:17 [DEBUG] ir.py (line 956) - Possible functions = [print]
16:14:17 [DEBUG] ir.py (line 988) - Found valid callable function print
16:14:17 [INFO] ir.py (line 952) - Calling function test with 2 arguments
16:14:17 [DEBUG] ir.py (line 956) - Possible functions = [test]
16:14:17 [DEBUG] ir.py (line 988) - Found valid callable function test
16:14:17 [DEBUG] __init__.py (line 35) - Build Directory = C:\Programming\Python\Cure\examples\build
16:14:17 [DEBUG] __init__.py (line 39) - Build Type = Debug
16:14:17 [DEBUG] __init__.py (line 40) - CMake Name = test
16:14:17 [DEBUG] __init__.py (line 44) - main.cpp = C:\Programming\Python\Cure\examples\build\main.cpp
16:14:17 [DEBUG] __init__.py (line 27) - Running CMake commands (cmake -B C:/Programming/Python/Cure/examples/build -S=C:/Programming/Python/Cure/examples/build -G "Ninja" and cmake --build C:/Programming/Python/Cure/examples/build)
16:14:19 [DEBUG] __init__.py (line 75) - Executable Name = test.exe
16:14:19 [DEBUG] __init__.py (line 78) - Built Executable File = C:\Programming\Python\Cure\examples\build\test.exe
16:14:19 [DEBUG] __init__.py (line 86) - Executable File = examples\test.exe
16:14:19 [INFO] __init__.py (line 155) - Compiled to executable at path examples\test.exe
16:14:19 [INFO] main.py (line 22) - Successfully ran Cure compiler
