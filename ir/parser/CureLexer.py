# Generated from ir/Cure.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,59,401,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,
        4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,
        7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,
        11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,
        13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
        17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,19,3,19,231,
        8,19,1,19,4,19,234,8,19,11,19,12,19,235,1,20,3,20,239,8,20,1,20,
        5,20,242,8,20,10,20,12,20,245,9,20,1,20,1,20,4,20,249,8,20,11,20,
        12,20,250,1,21,3,21,254,8,21,1,21,1,21,5,21,258,8,21,10,21,12,21,
        261,9,21,1,21,1,21,1,21,5,21,266,8,21,10,21,12,21,269,9,21,1,21,
        1,21,3,21,273,8,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        3,22,284,8,22,1,23,1,23,1,23,1,23,1,24,1,24,5,24,292,8,24,10,24,
        12,24,295,9,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,
        1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,34,
        1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,39,1,39,
        1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,
        1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,52,
        1,52,1,52,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,55,1,55,5,55,370,
        8,55,10,55,12,55,373,9,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,
        5,56,383,8,56,10,56,12,56,386,9,56,1,56,1,56,1,56,1,56,1,56,1,57,
        4,57,394,8,57,11,57,12,57,395,1,57,1,57,1,58,1,58,4,259,267,371,
        384,0,59,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
        34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
        45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,
        55,111,56,113,57,115,58,117,59,1,0,4,1,0,48,57,3,0,65,90,95,95,97,
        122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,414,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
        0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
        0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,
        0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
        0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
        0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
        0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
        0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,
        0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,
        1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,1,119,1,0,0,0,
        3,122,1,0,0,0,5,125,1,0,0,0,7,129,1,0,0,0,9,133,1,0,0,0,11,138,1,
        0,0,0,13,143,1,0,0,0,15,148,1,0,0,0,17,154,1,0,0,0,19,160,1,0,0,
        0,21,166,1,0,0,0,23,173,1,0,0,0,25,181,1,0,0,0,27,190,1,0,0,0,29,
        196,1,0,0,0,31,203,1,0,0,0,33,210,1,0,0,0,35,218,1,0,0,0,37,227,
        1,0,0,0,39,230,1,0,0,0,41,238,1,0,0,0,43,253,1,0,0,0,45,283,1,0,
        0,0,47,285,1,0,0,0,49,289,1,0,0,0,51,296,1,0,0,0,53,298,1,0,0,0,
        55,300,1,0,0,0,57,302,1,0,0,0,59,304,1,0,0,0,61,306,1,0,0,0,63,309,
        1,0,0,0,65,312,1,0,0,0,67,314,1,0,0,0,69,316,1,0,0,0,71,319,1,0,
        0,0,73,322,1,0,0,0,75,325,1,0,0,0,77,328,1,0,0,0,79,330,1,0,0,0,
        81,332,1,0,0,0,83,334,1,0,0,0,85,336,1,0,0,0,87,338,1,0,0,0,89,340,
        1,0,0,0,91,342,1,0,0,0,93,344,1,0,0,0,95,346,1,0,0,0,97,348,1,0,
        0,0,99,350,1,0,0,0,101,352,1,0,0,0,103,355,1,0,0,0,105,357,1,0,0,
        0,107,360,1,0,0,0,109,362,1,0,0,0,111,365,1,0,0,0,113,378,1,0,0,
        0,115,393,1,0,0,0,117,399,1,0,0,0,119,120,5,105,0,0,120,121,5,102,
        0,0,121,2,1,0,0,0,122,123,5,105,0,0,123,124,5,110,0,0,124,4,1,0,
        0,0,125,126,5,110,0,0,126,127,5,101,0,0,127,128,5,119,0,0,128,6,
        1,0,0,0,129,130,5,117,0,0,130,131,5,115,0,0,131,132,5,101,0,0,132,
        8,1,0,0,0,133,134,5,101,0,0,134,135,5,110,0,0,135,136,5,117,0,0,
        136,137,5,109,0,0,137,10,1,0,0,0,138,139,5,101,0,0,139,140,5,108,
        0,0,140,141,5,115,0,0,141,142,5,101,0,0,142,12,1,0,0,0,143,144,5,
        102,0,0,144,145,5,117,0,0,145,146,5,110,0,0,146,147,5,99,0,0,147,
        14,1,0,0,0,148,149,5,119,0,0,149,150,5,104,0,0,150,151,5,105,0,0,
        151,152,5,108,0,0,152,153,5,101,0,0,153,16,1,0,0,0,154,155,5,98,
        0,0,155,156,5,114,0,0,156,157,5,101,0,0,157,158,5,97,0,0,158,159,
        5,107,0,0,159,18,1,0,0,0,160,161,5,99,0,0,161,162,5,111,0,0,162,
        163,5,110,0,0,163,164,5,115,0,0,164,165,5,116,0,0,165,20,1,0,0,0,
        166,167,5,114,0,0,167,168,5,101,0,0,168,169,5,116,0,0,169,170,5,
        117,0,0,170,171,5,114,0,0,171,172,5,110,0,0,172,22,1,0,0,0,173,174,
        5,102,0,0,174,175,5,111,0,0,175,176,5,114,0,0,176,177,5,101,0,0,
        177,178,5,97,0,0,178,179,5,99,0,0,179,180,5,104,0,0,180,24,1,0,0,
        0,181,182,5,99,0,0,182,183,5,111,0,0,183,184,5,110,0,0,184,185,5,
        116,0,0,185,186,5,105,0,0,186,187,5,110,0,0,187,188,5,117,0,0,188,
        189,5,101,0,0,189,26,1,0,0,0,190,191,5,99,0,0,191,192,5,108,0,0,
        192,193,5,97,0,0,193,194,5,115,0,0,194,195,5,115,0,0,195,28,1,0,
        0,0,196,197,5,115,0,0,197,198,5,116,0,0,198,199,5,97,0,0,199,200,
        5,116,0,0,200,201,5,105,0,0,201,202,5,99,0,0,202,30,1,0,0,0,203,
        204,5,112,0,0,204,205,5,117,0,0,205,206,5,98,0,0,206,207,5,108,0,
        0,207,208,5,105,0,0,208,209,5,99,0,0,209,32,1,0,0,0,210,211,5,112,
        0,0,211,212,5,114,0,0,212,213,5,105,0,0,213,214,5,118,0,0,214,215,
        5,97,0,0,215,216,5,116,0,0,216,217,5,101,0,0,217,34,1,0,0,0,218,
        219,5,111,0,0,219,220,5,118,0,0,220,221,5,101,0,0,221,222,5,114,
        0,0,222,223,5,114,0,0,223,224,5,105,0,0,224,225,5,100,0,0,225,226,
        5,101,0,0,226,36,1,0,0,0,227,228,5,39,0,0,228,38,1,0,0,0,229,231,
        5,45,0,0,230,229,1,0,0,0,230,231,1,0,0,0,231,233,1,0,0,0,232,234,
        7,0,0,0,233,232,1,0,0,0,234,235,1,0,0,0,235,233,1,0,0,0,235,236,
        1,0,0,0,236,40,1,0,0,0,237,239,5,45,0,0,238,237,1,0,0,0,238,239,
        1,0,0,0,239,243,1,0,0,0,240,242,7,0,0,0,241,240,1,0,0,0,242,245,
        1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,246,1,0,0,0,245,243,
        1,0,0,0,246,248,5,46,0,0,247,249,7,0,0,0,248,247,1,0,0,0,249,250,
        1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,42,1,0,0,0,252,254,3,
        99,49,0,253,252,1,0,0,0,253,254,1,0,0,0,254,272,1,0,0,0,255,259,
        5,34,0,0,256,258,9,0,0,0,257,256,1,0,0,0,258,261,1,0,0,0,259,260,
        1,0,0,0,259,257,1,0,0,0,260,262,1,0,0,0,261,259,1,0,0,0,262,273,
        5,34,0,0,263,267,3,37,18,0,264,266,9,0,0,0,265,264,1,0,0,0,266,269,
        1,0,0,0,267,268,1,0,0,0,267,265,1,0,0,0,268,270,1,0,0,0,269,267,
        1,0,0,0,270,271,3,37,18,0,271,273,1,0,0,0,272,255,1,0,0,0,272,263,
        1,0,0,0,273,44,1,0,0,0,274,275,5,116,0,0,275,276,5,114,0,0,276,277,
        5,117,0,0,277,284,5,101,0,0,278,279,5,102,0,0,279,280,5,97,0,0,280,
        281,5,108,0,0,281,282,5,115,0,0,282,284,5,101,0,0,283,274,1,0,0,
        0,283,278,1,0,0,0,284,46,1,0,0,0,285,286,5,110,0,0,286,287,5,105,
        0,0,287,288,5,108,0,0,288,48,1,0,0,0,289,293,7,1,0,0,290,292,7,2,
        0,0,291,290,1,0,0,0,292,295,1,0,0,0,293,291,1,0,0,0,293,294,1,0,
        0,0,294,50,1,0,0,0,295,293,1,0,0,0,296,297,5,43,0,0,297,52,1,0,0,
        0,298,299,5,45,0,0,299,54,1,0,0,0,300,301,5,42,0,0,301,56,1,0,0,
        0,302,303,5,47,0,0,303,58,1,0,0,0,304,305,5,37,0,0,305,60,1,0,0,
        0,306,307,5,61,0,0,307,308,5,61,0,0,308,62,1,0,0,0,309,310,5,33,
        0,0,310,311,5,61,0,0,311,64,1,0,0,0,312,313,5,62,0,0,313,66,1,0,
        0,0,314,315,5,60,0,0,315,68,1,0,0,0,316,317,5,62,0,0,317,318,5,61,
        0,0,318,70,1,0,0,0,319,320,5,60,0,0,320,321,5,61,0,0,321,72,1,0,
        0,0,322,323,5,38,0,0,323,324,5,38,0,0,324,74,1,0,0,0,325,326,5,124,
        0,0,326,327,5,124,0,0,327,76,1,0,0,0,328,329,5,33,0,0,329,78,1,0,
        0,0,330,331,5,46,0,0,331,80,1,0,0,0,332,333,5,44,0,0,333,82,1,0,
        0,0,334,335,5,58,0,0,335,84,1,0,0,0,336,337,5,61,0,0,337,86,1,0,
        0,0,338,339,5,40,0,0,339,88,1,0,0,0,340,341,5,41,0,0,341,90,1,0,
        0,0,342,343,5,123,0,0,343,92,1,0,0,0,344,345,5,125,0,0,345,94,1,
        0,0,0,346,347,5,91,0,0,347,96,1,0,0,0,348,349,5,93,0,0,349,98,1,
        0,0,0,350,351,5,36,0,0,351,100,1,0,0,0,352,353,5,60,0,0,353,354,
        5,45,0,0,354,102,1,0,0,0,355,356,5,63,0,0,356,104,1,0,0,0,357,358,
        5,45,0,0,358,359,5,62,0,0,359,106,1,0,0,0,360,361,5,38,0,0,361,108,
        1,0,0,0,362,363,5,61,0,0,363,364,5,62,0,0,364,110,1,0,0,0,365,366,
        5,47,0,0,366,367,5,47,0,0,367,371,1,0,0,0,368,370,9,0,0,0,369,368,
        1,0,0,0,370,373,1,0,0,0,371,372,1,0,0,0,371,369,1,0,0,0,372,374,
        1,0,0,0,373,371,1,0,0,0,374,375,5,10,0,0,375,376,1,0,0,0,376,377,
        6,55,0,0,377,112,1,0,0,0,378,379,5,47,0,0,379,380,5,42,0,0,380,384,
        1,0,0,0,381,383,9,0,0,0,382,381,1,0,0,0,383,386,1,0,0,0,384,385,
        1,0,0,0,384,382,1,0,0,0,385,387,1,0,0,0,386,384,1,0,0,0,387,388,
        5,42,0,0,388,389,5,47,0,0,389,390,1,0,0,0,390,391,6,56,0,0,391,114,
        1,0,0,0,392,394,7,3,0,0,393,392,1,0,0,0,394,395,1,0,0,0,395,393,
        1,0,0,0,395,396,1,0,0,0,396,397,1,0,0,0,397,398,6,57,0,0,398,116,
        1,0,0,0,399,400,9,0,0,0,400,118,1,0,0,0,15,0,230,235,238,243,250,
        253,259,267,272,283,293,371,384,395,1,6,0,0
    ]

class CureLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    IF = 1
    IN = 2
    NEW = 3
    USE = 4
    ENUM = 5
    ELSE = 6
    FUNC = 7
    WHILE = 8
    BREAK = 9
    CONST = 10
    RETURN = 11
    FOREACH = 12
    CONTINUE = 13
    CLASS = 14
    STATIC = 15
    PUBLIC = 16
    PRIVATE = 17
    OVERRIDE = 18
    APOSTROPHE = 19
    INT = 20
    FLOAT = 21
    STRING = 22
    BOOL = 23
    NIL = 24
    ID = 25
    ADD = 26
    SUB = 27
    MUL = 28
    DIV = 29
    MOD = 30
    EEQ = 31
    NEQ = 32
    GT = 33
    LT = 34
    GTE = 35
    LTE = 36
    AND = 37
    OR = 38
    NOT = 39
    DOT = 40
    COMMA = 41
    COLON = 42
    ASSIGN = 43
    LPAREN = 44
    RPAREN = 45
    LBRACE = 46
    RBRACE = 47
    LBRACK = 48
    RBRACK = 49
    DOLLAR = 50
    RARROW = 51
    QUESTION = 52
    RETURNS = 53
    AMPERSAND = 54
    ARROWASSIGN = 55
    COMMENT = 56
    MULTILINE_COMMENT = 57
    WHITESPACE = 58
    OTHER = 59

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'if'", "'in'", "'new'", "'use'", "'enum'", "'else'", "'func'", 
            "'while'", "'break'", "'const'", "'return'", "'foreach'", "'continue'", 
            "'class'", "'static'", "'public'", "'private'", "'override'", 
            "'''", "'nil'", "'+'", "'-'", "'*'", "'/'", "'%'", "'=='", "'!='", 
            "'>'", "'<'", "'>='", "'<='", "'&&'", "'||'", "'!'", "'.'", 
            "','", "':'", "'='", "'('", "')'", "'{'", "'}'", "'['", "']'", 
            "'$'", "'<-'", "'?'", "'->'", "'&'", "'=>'" ]

    symbolicNames = [ "<INVALID>",
            "IF", "IN", "NEW", "USE", "ENUM", "ELSE", "FUNC", "WHILE", "BREAK", 
            "CONST", "RETURN", "FOREACH", "CONTINUE", "CLASS", "STATIC", 
            "PUBLIC", "PRIVATE", "OVERRIDE", "APOSTROPHE", "INT", "FLOAT", 
            "STRING", "BOOL", "NIL", "ID", "ADD", "SUB", "MUL", "DIV", "MOD", 
            "EEQ", "NEQ", "GT", "LT", "GTE", "LTE", "AND", "OR", "NOT", 
            "DOT", "COMMA", "COLON", "ASSIGN", "LPAREN", "RPAREN", "LBRACE", 
            "RBRACE", "LBRACK", "RBRACK", "DOLLAR", "RARROW", "QUESTION", 
            "RETURNS", "AMPERSAND", "ARROWASSIGN", "COMMENT", "MULTILINE_COMMENT", 
            "WHITESPACE", "OTHER" ]

    ruleNames = [ "IF", "IN", "NEW", "USE", "ENUM", "ELSE", "FUNC", "WHILE", 
                  "BREAK", "CONST", "RETURN", "FOREACH", "CONTINUE", "CLASS", 
                  "STATIC", "PUBLIC", "PRIVATE", "OVERRIDE", "APOSTROPHE", 
                  "INT", "FLOAT", "STRING", "BOOL", "NIL", "ID", "ADD", 
                  "SUB", "MUL", "DIV", "MOD", "EEQ", "NEQ", "GT", "LT", 
                  "GTE", "LTE", "AND", "OR", "NOT", "DOT", "COMMA", "COLON", 
                  "ASSIGN", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", 
                  "RBRACK", "DOLLAR", "RARROW", "QUESTION", "RETURNS", "AMPERSAND", 
                  "ARROWASSIGN", "COMMENT", "MULTILINE_COMMENT", "WHITESPACE", 
                  "OTHER" ]

    grammarFileName = "Cure.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


