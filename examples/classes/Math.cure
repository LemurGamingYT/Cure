func main() -> int {
    print(Math.pi) // Pi
    print(Math.e) // Euler's number
    print(Math.tau) // 2*Pi
    print(Math.phi) // Golden ratio

    print(Math.sin(60)) // Sine of 60 degrees
    print(Math.cos(45)) // Cosine of 45 degrees
    print(Math.tan(30)) // Tangent of 30 degrees
    print(Math.asin(0.5)) // Arcsine of 0.5
    print(Math.acos(0.5)) // Arccosine of 0.5
    print(Math.atan(1)) // Arctangent of 1
    print(Math.atan2(1, 2)) // Arctangent of 1/2

    print(Math.sqrt(16)) // Square root of 16
    print(Math.nth_root(27, 3)) // Cube root of 27
    print(Math.pow(10, 5)) // 10 to the power of 5
    print(Math.exp(1)) // e to the power of 1
    print(Math.log(10)) // Natural logarithm of 10
    print(Math.log10(100)) // Base 10 logarithm of 100
    print(Math.log2(1024)) // Base 2 logarithm of 1024
    print(Math.rad(180)) // Convert 180 degrees to radians
    print(Math.deg(Math.pi)) // Convert pi radians to degrees
    print(Math.abs(-10)) // Absolute value of -10

    print(Math.ceil(1.5)) // Round 1.5 up
    print(Math.floor(1.5)) // Round 1.5 down
    print(Math.round(1.5)) // Round 1.5 to the nearest integer

    print(Math.min(62, 100)) // Minimum value of 62 and 100
    print(Math.max(Math.pow(6, 6), Math.pow(10, 5))) // Maximum value of 6^6 and 10^5

    frac = Math.fraction(1, 2) // Create a 1/2 fraction
    frac2 = Math.fraction(5, 20) // Create a 5/20 fraction
    print(frac, frac2) // Print out the fractions
    print(frac.simple, frac2.simple) // Simplify the fractions
    print(frac.recip, frac2.recip) // Reciprocal of the fractions
    print(frac.numerator, frac2.numerator) // Get the numerators of the fractions
    print(frac.denominator, frac2.denominator) // Get the denominators of the fractions

    // Perform some operations on the fractions
    print(frac + frac2)
    print(frac - frac2)
    print(frac * frac2)
    print(frac / frac2)

    // Create some Vector2s (2D Vectors)
    vec = Math.vec2(80.102, 70.5)
    vec2 = Math.vec2(200.25, 500.95)
    print(vec, vec2) // Print out the Vector2s
    print(vec.length, vec2.length) // Get the length of the vectors
    print(vec.norm, vec2.norm) // Get the normalised vectors
    print(vec.dot(vec2)) // Get the dot product of the two vectors
    print(vec.cross(vec2)) // Get the cross product of the two vectors
    print(vec.dist(vec2)) // Get the distance between the two vectors
    return 0
}
