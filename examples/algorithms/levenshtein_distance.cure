func min_array(array[int] arr) -> int {
    min = arr[0]
    foreach x in arr {
        if x > min { continue }
        min = x
    }

    return min
}

func lev_dist(string word1, string word2) -> int {
    word1 = word1.lower()
    word2 = word2.lower()

    length1 = word1.length
    length2 = word2.length
    max_len = 0
    diff = 0
    distances = int{}
    distance = 0

    if length1 > length2 {
        diff = length1 - length2
        max_len = length1
    } else if length1 < length2 {
        diff = length2 - length1
        max_len = length2
    } else {
        diff = 0
        max_len = length1
    }

    for x in 0..max_len - diff {
        if word1[x] == word2[x] { continue }
        distance += 1
    }

    distances.add(distance)
    distance = 0

    for x in 0..max_len - diff {
        if word1[-(x + 1)] == word2[-(x + 1)] { continue }
        distance += 1
    }

    distances.add(distance)
    diff += min_array(distances)
    return diff
}

func main() -> int {
    word1 = input("Enter a word: ")
    word2 = input("Enter another word: ")
    print($"The Levenshtein distance between {word1} and {word2} is {to_string(lev_dist(word1, word2))}")
    return 0
}
