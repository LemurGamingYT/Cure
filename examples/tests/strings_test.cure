func main() -> int {
    // strings are pointers and so they seem to be quite buggy
    a = "hello"
    b = "abc"
    c = "o"
    d = ""
    e = "123"

    arr = {a, e, c, b}

    assert(a == "hello")
    assert(a != c)
    assert(d.is_empty)
    assert(d.length == 0)
    assert(a.length == 5)
    assert(!d.is_char)
    assert(c.is_char)
    assert(!a.is_digit)
    assert(e.is_digit)
    assert(b.is_lower)
    assert(b.upper().is_upper)
    assert(b.lower() == b)
    assert(e.lower() == e)
    assert(d.reversed == d)
    assert(e.reversed == "321")
    assert(a.title() == "Hello")
    assert(!a.startswith("e"))
    assert(!b.startswith("c"))
    assert(c.endswith("o"))
    assert(d.endswith(""))
    assert(a.has("h"))
    assert(a[0] == a[0])
    assert(b[0] != a[0])
    assert(e[0] == "1")
    assert(e[1] == "2")
    assert(d.join(arr) == "hello123oabc")
    assert(a.join(arr) == "hellohello123helloohelloabc")
    assert(e.parse_int() == 123)
    assert(e.find("1") == 0)
    assert(a.find(c) == 4)
    assert(e.find(c) == -1)
    assert(a.slice(1, 2) == "el")
    assert(b.slice(0, 0) == b[0])
    assert("%d, %d".format(1, 2) == "1, 2")
    assert("%d%d%d".format(1, 2, 3) == e)
    return 0
}
