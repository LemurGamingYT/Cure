class Foo {
    int a
    int b

    static func Foo(int a, int b) {
        this.a = a
        this.b = b
    }
}

func foo_factory(int a, int b) -> Foo? {
    if a > 0 {
        return optional[Foo](nil)
    } else {
        return optional[Foo](new Foo(a, b))
    }
}

func main() -> int {
    good_foo = foo_factory(0, 0)
    bad_foo = foo_factory(100, 5000)
    assert(bad_foo.is_nil)
    assert(!good_foo.is_nil)
    assert(good_foo.value.a == 0)
    assert(good_foo.value.b == 0)
    return 0
}
